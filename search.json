[{"title":"安装Windows server作为简易nas使用","date":"2024-12-10T03:31:28.248Z","url":"/2024/12/10/%E5%AE%89%E8%A3%85Windows%20server%E4%BD%9C%E4%B8%BA%E7%AE%80%E6%98%93nas%E4%BD%BF%E7%94%A8/","categories":[["undefined",""]],"content":"前言由于淘汰下来一个联想80NV的笔记本电脑，一颗6代的iU，16G的内存，一个1T的SSD、一个1T的HDD，想要把它改造成一个简易上手的nas。我们要知道作为一个简易的nas需要有什么功能：首先是作为影音中心的功能，由于笔者只看番剧，所以这项功能只需要用ani-rss自动订阅+qBittorrent实现即可，同时影视功能的播放与文件分享功能可以一起用SMB共享实现。接下来是手机相册备份，我这里选择微力同步,通过分享，实现在家连上内网或者连接ZeroTier局域网的环境下，自动进行手机内照片的备份。最后是功耗问题，笔记本的功耗在待机下会有大概15W左右的功耗，不满足我们的低功耗要求，我初步的计划是使用自动休眠以及任务唤醒功能来达到让笔记本在大部分时间保持休眠功耗，来实现低功耗待机的目的。 准备工作在笔记本上安装Windows server 2019的系统，把需要的驱动打好，在设置中把笔记本关盖休眠关闭，笔记本关盖屏幕关闭打开。添加如下服务器角色和功能，其中远程桌面服务是为了我们可以通过Windows自带的远程桌面连接来远程控制控制电脑，SMB服务是为了后面我们共享管理进行准备，无线 LAN 服务是为了打开电脑的无线功能，通过双网卡SMB3.0来实现多通道传输数据，优化共享使用质量。其他功能后期用到我们再打开即可。 功能实现SMB共享实现笔者将共享两个部分，其中一个文件夹是作为影音存贮使用，另一个硬盘作为网络驱动器，方便我在内网环境以及ZeroTier局域网的环境下可以随时备份或者调用文件使用。打开文件和存储服务-共享，新建共享，打开启用基于存取的枚举(A)功能和允许共享缓存(W)功能，在添加需要共享的账户即可。然后我们要关闭SMBv1，打开SMBv2&#x2F;v3,微软学习 中有相关代码，首先打开PowerShell，输入以下代码：SMBv1检测 禁用 启用 SMBv2检测 禁用 启用 现在我们就可以愉快的享受SMB共享了，至于ani-rss自动订阅+qBittorrent可以详细查看ani-rss的官网教程 里详细介绍。 相册同步去微力同步 官网下载电脑版以及手机版在手机上新建一个同步目录，把系统中相册默认的存储位置选择只读密钥分享出去，在设置中打开忽略已删除，防止电脑上的文件影响到手机相册。将密钥输入到电脑端的新建同步中的连接密钥即可。因为笔者手机中将照片删除会把照片重命名为trashed的格式（30天后再删除），为了防止把这些图片也进行同步，我在电脑端设置选项中添加忽略列表“trashed*”，每台手机不同，详情可以参考使用教程 中的忽略文件第一次同步可能需要一些时间。 功耗问题首先我们要先把电脑的休眠功能关闭，这样电脑只会睡眠不会休眠，方便我们后续通过网路或者程序唤醒。同样是通过PowerShell，键入： 然后我们在电源和睡眠中设置2小时休眠。在任务与计划程序中新建一个计划，在常规中[选择不管用户是否登录都要运行]、[使用最高权限运行]，配置选择[Windows Server 2019]。触发器选择几个每天机器会运作的时段，比如笔者的番剧更新一般都在半夜，所以我设置了半夜启动。操作的话自己写一个自动退出的bat脚本进行即可，只是用来唤醒使用。 接下来在条件中选中[唤醒计算机运行此任务]，这个非常重要，就是靠着这个来唤醒计算机进行活动。 最后我们来配置网络唤醒。在适配器-以太网-属性-配置中的电源管理打开允许此设备唤醒计算机，再在高级中开启魔术封包唤醒。在 BIOS 设置打开这些功能，不同的厂商名称不同，可以参考如下。Automatic Power OnWake on LAN&#x2F;WLANPower ManagementPower On by Onboard LANPower On by PCI-E Devices 我们现在就拥有一个可以日常需求的轻windows nas。它满足了笔者对于nas的日常需求，同时还具有一定的可扩展性，当然以这台电脑的cpu来看也干不了太多事情，后续升级我也会继续更新。"},{"title":"如何制作属于自己的Grub主题","date":"2024-12-03T08:04:28.296Z","url":"/2024/12/03/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84Grub%E4%B8%BB%E9%A2%98/","categories":[["undefined",""]],"content":" 最近给[Ventoy]换了一块新的大U盘，搞了很多新的镜像进去，看着[Ventoy]的默认丑界面陷入了沉思，想起来它的主题是基于GRUB的就想着可以自己自定义一套主题来使用。 捷径 从头做GRUB需要额外用linux的系统，鉴于我在上班摸鱼时搞完这一切的宗旨，我决定去一个主题站 下载预设好的主题，在配置文件进行修改就行。 参数配置 在下载好的文件中找到带有theme关键字的txt文件打开它： 最开始的一段是一些全局属性，title-text是标题，显示在上方中央的位置；desktop-image指定了背景图片，terminal-left和terminal-top则指定了Grub Terminal的左上角的位置，terminal-width和terminal-height就是Terminal的宽度和高度。这些宽度、高度和位置的指定都支持使用像素或者百分比或者两者混合，例如”12%+100”。下文提到的宽度、高度和位置也同理。terminal-font是字体，支持pf2格式。下面的boot_menu和label是两个组件(component)，boot_menu就是给出选项的启动菜单，而label代表你希望自定义显示的一段话。每个组件有自己的属性，其中left, top, width, height含义和全局的类似，就是表示左上角的位置以及组件本身的长宽。item_color和selected_item_color顾名思义，就是每一项的文字默认颜色以及被选中时的颜色。下面一些项指定了图标的长宽，项目文字和图标的距离，项目之间的距离等等，具体可以查阅官方文档，在此不再赘述。而selected_item_pixmap_style是一个非常有意思的东西，它相当于通过9张小图片指定了一个item的四角、四边以及内部应该用什么样的贴图，我们需要给它9张后缀分别为c, e, n, s, w, ne, nw, se, ew的小图片，Grub就会自己把它们拼成一个完整的背景用在这个item上，selected_item_pixmap_style则表明仅有被选中的item适用这个贴图。label组件的各种东西是类似的，需要注意的是id设为” __ timeout __ “就可以使用%d在文字中代表剩余秒数。我们可以对它进行一些简单的修改，比如替换后面的背景图片、字体等。 Ventoy设置 先把配置好的主题文件放进ventoyU盘的路径下，通过VentoyPlugson 工具进行配置，在主题插件里把theme.txt的地址填进去即可 查看效果"},{"title":"zerotier搭建（openwrt番外）","date":"2024-11-27T03:59:49.154Z","url":"/2024/11/27/zerotier%E6%90%AD%E5%BB%BA%EF%BC%88openwrt%E7%95%AA%E5%A4%96%EF%BC%89/","categories":[["undefined",""]],"content":"痛点分析 上次我们操作openwrt后，只能ping通，只能通过[ZoreTier]后台设置的网段来进行访问，而且只能访问到软路由，不能访问连接到软路由的终端（即家里的设备），同样家里的设备也不能访问到外面连接[ZoreTier]的设备。 这篇番外我们将介绍通过对openwrt、[ZoreTier]里的路由设置，来实现以上的痛点。 openwrt设置接口设置 打开openwrt,找到网络-接口界面，点击创建新接口，命名为zerotier，协议为不配置协议，设备选择zthnhfla3p 这步如果已经有该接口了，就可以跳过。 防火墙设置 找到网络-防火墙-通信规则，创建一个新的规则，名称命名为zerotier，协议选择udp，源区域选择任意区域，源端口选择任意，目标区域选择设备（输入），目标端口选择9993，操作选择接受，保存退出后点击启用。 在网络-防火墙-常规设置的区域模块里，创建一个新的区域设置，名称为zerotier,入站出战数据及转发都选择接受，打开ip动态伪装，涵盖的网络选择刚刚创建的zerotier接口，允许转发到的目标区域以及允许来自源区域的转发中将openwrt默认lan选中，点击保存。 ZoreTier设置 进入到自己的ZeroTier 节点的管理后台里，找到Managed Routes区域，新建一个路由，Destination里填你家中的网段如192.168.1.0&#x2F;24，via填你软路由在[ZeroTier]里被分配的Managed IPs，然后点击Submit提交即可。 现在你可以在外网环境下打开你设备的[ZeroTier]，尝试去ping你家中设备的内网地址，如果成功则代表配置成功。"},{"title":"zerotier搭建","date":"2024-11-21T08:57:10.661Z","url":"/2024/11/21/zerotier%E6%90%AD%E5%BB%BA/","categories":[["undefined",""]],"content":" 这是我对于自己在内网穿透学习时的一点小心得，使用的工具是ZeroTier ，它的优势在于可以在基本上全平台去使用，包含windows、Android、OpenWrt。我通过它让我可以在公司、家里、或者其它外部环境下，不管是使用电脑还是手机都可以做到互相访问数据以及一些本地的管理系统。它同时也给我带来了远程看番等一些好处，不过，实际上它的稳定性受到当地网络限制，我在使用SMB共享时，最高速率也就8.32 MBps.笔者推测是受到家庭网络影响，但是在看一集24分钟的mov格式下比特率不超过4000kbps的动画还是勉强够用的。这篇文章先是讲述我在进行ZeroTier搭建时的过程，以及一些问题。 ZeroTier网站设置 进入ZeroTier 进行注册，注册好后在创建界面点击 [create a network] ，点击新生成的 [network id]（记住这个id,它将是你的设备加入你的私人局域网的申请标签）进入到网络设置界面，在Settings-Basics-Name栏中给自己的网络命名，在Settings-Advanced模块里的[IPv4 Auto-Assign]中选择自己喜欢的网段，这个网段会作为你的隧道里的私人网段。 ZeroTier Windows设置 在ZeroTier 官网下载ZeroTier客户端，下载成功后在右下角点击 join new network,将上一步中的[network id]填入刚刚弹出的对话框，再单击join即可，然后我们回到ZeroTier 网站 ，在Members里会出现你的设备，通过左面选中后，在单击Authorize。这样你的windows设备就加入到你的私人网络里了，将系统分配给你的Managed IP记住。 ZeroTier Android设置 通过Google商店下载ZeroTier，打开app后点击➕，同样把[network id]输入到网络ID栏中，再点击添加网络，同上一步一样在网站中将你的手机设备进行认证，同样记住你的Managed IP。 现在你就拥有两台加入到私人网络的设备，可以尝试用电脑去ping手机的Managed IP，但是其实你会发现，有可能ping不通，或者延迟在2000ms左右，这是因为ZeroTier的服务器在国外，对于在国内打洞阻碍很多，所以接下来我们需要建立自己的moon节点，作为打洞的辅助，提升我们的使用体验。 ZeroTier moon服务器搭建 随便去一个大厂买一台便宜的配置最低的服务器，moon节点不会作为中转使用，只负责连接前的打洞，所以对于配置要求很低。装一个Ubuntu的系统，先把防火墙的9993的端口开放（udp、tcp）。进入到操作界面，安装curl. 再通过脚本下载ZeroTier 启动并开启自启 加入到网络 进入安装目录 生成节点配置(moon) 通过vi编辑配置，或者是你的云服务器自带的功能去编辑json的配置，进入到moon.json里，修改成公网IP地址，改成你买的服务器的地址 生成签名 此时应该会生成一个000000xxxxxx.moon的文件，创建一个moons.d的目录,将刚刚的000000xxxxxx.moon文件放入到moons.d中 重新启动ZeroTier服务 想办法把刚刚的000000xxxxxx.moon文件下载下来即可 Windows及Android系统moon文件导入 首先是windows,快捷键 Win+R，输入 services.msc，启动服务程序；找到 ZeroTier One 服务程序，右键属性找到可执行文件路径；在可执行路径下创建 moons.d 文件夹，将xxx.moon 拷贝到该文件夹下，然后再重启 ZeroTier One 服务。 此时可以通过cmd输入查看节点，若出现服务器 IP，即表示 moon 连接成功 手机的话通过app右上角的的按钮找到入轨，单击添加，从文件导入，选中刚刚的000000xxxxxx.moon即可。 此时通过右上角的按钮查看结点列表，如果看到节点类型为Moon中转的节点并且ip为你购买的服务器的公网地址则表明成功。 OpenWrt的moon文件导入 开启ZeroTier后，将moon服务器将生成的0000000xxxx.moon复制到&#x2F;etc&#x2F;zerotier&#x2F;moons.d 现在你可以在在任意节点，通过ping的方式查看延迟，网络环境好的情况下最低应在15ms左右。 下一篇我会介绍一下我自己在家搭建windows服务器时的过程以及碰到的问题。"}]